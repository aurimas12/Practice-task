# version: "3.8"

# services:
#   django:
#     build: .
#     container_name: django
#     restart: always
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/usr/src/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - pgdb
#   pgdb:
#     image: postgres:12.3
#     container_name: pgdb
#     restart: always
#     ports:
#       - 5433:5432
#     environment:
#       POSTGRES_DB: practice_db
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: jv06kgus
#     volumes:
#       - ./db:/var/lib/postgresql/data/

#################################
########### KONG TEST ###########
#################################
version: "2.1"

networks:
  kong-net:

services:
  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:latest
    container_name: kong-db
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: on-failure

  #######################################
  # Kong database migration
  #######################################
  kong-migrations:
    image: kong:latest
    command: kong migrations bootstrap && kong migrations up && kong migrations finish
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    networks:
      - kong-net
    restart: on-failure

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    container_name: kong-api
    depends_on:
      kong-database:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    networks:
      - kong-net
    ports:
      - "8000:8000"
      - "8001:8001"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  #######################################
  # Example Microservice
  #######################################
  app:
    build: .
    container_name: kong-app
    networks:
      - kong-net
    restart: on-failure

  #######################################
  # Kong: The API Gateway
  #######################################
  konga:
    image: pantsel/konga
    environment:
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
      # DB_ADAPTER: ${KONG_DATABASE}
      # DB_HOST: ${KONGA_DB_HOST}
      # DB_PORT: ${KONGA_DB_PORT}
      # DB_DATABASE: ${KONGA_DB_NAME}
      # DB_USER: ${KONGA_DB_USERNAME}
      # DB_PASSWORD: ${KONGA_DB_PASSWORD}
      NODE_ENV: ${KONGA_ENV}
      KONGA_HOOK_TIMEOUT: 10000
    restart: on-failure
    ports:
      - $KONGA_PORT:1337
    depends_on:
      - kong-database
    networks:
      - kong-net
#######################################
# Konga: The API Gateway
#######################################

# _format_version: "1.1"

# services:
# - name: admin-api
#   url: http://127.0.0.1:8001
#   routes:
#     - paths:
#       - /admin-api
#   plugins:
#   - name: key-auth

# consumers:
# - username: admin
#   keyauth_credentials:
#   - key: secret
